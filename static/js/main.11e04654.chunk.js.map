{"version":3,"sources":["Api.js","AuthForm.js","TrustCard.js","App.js","index.js"],"names":["YandexMusicApi","oauth_url","client_id","client_secret","generate_token_by_username_and_password","username","password","x_captcha_answer","x_captcha_key","a","url","data","grant_type","post","then","resp","json","send_token_to_backend","branch","hash","token","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","handleCaptcha","errorMessage","includes","CaptchaWrong","CaptchaRequired","fetch","method","headers","body","ok","message","error_description","Error","AuthForm","props","api","mirror","handleChange","target","name","value","setState","state","handleSubmit","event","preventDefault","x_captcha_url","undefined","window","location","href","authenticated","catch","error","search","params","URLSearchParams","displayName","get","this","Button","variant","block","className","Form","Group","controlId","Label","column","Control","onChange","type","placeholder","Row","Col","Image","fluid","src","onClick","React","Component","TrustCard","Card","Header","size","icon","Body","Title","title","Text","text","defaultProps","App","Container","Badge","CardDeck","library","add","fab","far","fas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11e04654.chunk.js","sourcesContent":["/**\n * Reference: https://github.com/MarshalX/yandex-music-api/blob/952145c3b8431385f2fe8273d52d8eb4e49fcceb/yandex_music/client.py#L89\n */\nclass YandexMusicApi {\n    oauth_url = 'https://oauth.yandex.com';\n    client_id = '23cabbbdc6cd418abb4b39c32c41195d';\n    client_secret = '53bc75238f0c4d08a118e51fe9203300';\n\n    generate_token_by_username_and_password = async (username, password, x_captcha_answer, x_captcha_key) => {\n        const url = `${this.oauth_url}/token`;\n\n        let data = {\n            grant_type: 'password',\n            client_id: this.client_id,\n            client_secret: this.client_secret,\n            username: username,\n            password: password\n        };\n\n        if (x_captcha_answer && x_captcha_key) {\n            data = {...data, x_captcha_answer, x_captcha_key}\n        }\n\n        return await this.post(url, data)\n            .then(resp => resp.json())\n            .then(json => json['access_token']);\n    };\n\n    send_token_to_backend = async (branch, hash, token) => {\n        const url = `https://${branch}.koteeq.me/yandex`;\n\n        let data = {\n            hash: hash,\n            token: token\n        };\n\n        return await this.post(url, data)\n            .then(resp => resp.json());\n    };\n\n    serialize = (obj) => {\n        let str = [];\n        for (let p in obj)\n            if (obj.hasOwnProperty(p)) {\n                str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n            }\n        return str.join(\"&\");\n    };\n\n    handleCaptcha = (errorMessage, json) => {\n        if (errorMessage.includes('Wrong')) {\n            throw new CaptchaWrong(json);\n        } else {\n            throw new CaptchaRequired(json);\n        }\n    };\n\n    post = (url, data) => {\n        return fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: this.serialize(data)\n        }).then(resp => {\n            if (!resp.ok) {\n                return resp.json().then(json => {\n                    let message = json.error_description || 'Unknown HTTP Error';\n                    if (message.includes('CAPTCHA')) {\n                        return this.handleCaptcha(message, json);\n                    } else {\n                        throw new Error(message);\n                    }\n                });\n            }\n            return resp;\n        });\n    };\n}\n\nclass CaptchaRequired extends Error {\n    constructor(body) {\n        super();\n        this.body = body\n    }\n}\n\nclass CaptchaWrong extends Error {\n    constructor(body) {\n        super();\n        this.body = body\n    }\n}\n\nexport {YandexMusicApi};\nexport {CaptchaRequired};\nexport {CaptchaWrong};\n","import {Button, Col, Form, Image, Row} from \"react-bootstrap\";\nimport React from \"react\";\nimport {CaptchaRequired, CaptchaWrong, YandexMusicApi} from \"./Api\";\n\n\nclass AuthForm extends React.Component {\n    api = new YandexMusicApi();\n    mirror = 'https://tx.me/';\n\n    constructor(props) {\n        super(props);\n        let search = window.location.search;\n        let params = new URLSearchParams(search);\n        this.state = {\n            username: '',\n            password: '',\n            error: null,\n            authenticated: false,\n            displayName: params.get('display_name'),\n            hash: params.get('hash'),\n            branch: params.get('branch') || 'np'\n        };\n    }\n\n    handleChange = ({target: {name, value}}) => {\n        this.setState({...this.state, [name]: value, error: null})\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        this.setState({\n            ...this.state,\n            x_captcha_url: undefined,\n            x_captcha_key: undefined\n        });\n\n        const {username, password, x_captcha_answer, x_captcha_key} = this.state;\n        this.api.generate_token_by_username_and_password(username, password, x_captcha_answer, x_captcha_key).then(token => {\n            this.api.send_token_to_backend(this.state.branch, this.state.hash, token).then(resp => {\n                window.location.href = `tg://resolve?domain=nowplaybot`;\n                this.setState({...this.state, authenticated: true})\n            }).catch(error => {\n                this.setState({\n                    ...this.state,\n                    error\n                });\n            });\n        }).catch(error => {\n            if (error instanceof CaptchaRequired || error instanceof CaptchaWrong) {\n                const {x_captcha_url, x_captcha_key, error_description} = error.body;\n                this.setState({\n                    ...this.state,\n                    x_captcha_url,\n                    x_captcha_key,\n                    error: error_description\n                })\n            } else {\n                this.setState({\n                    ...this.state,\n                    error\n                });\n            }\n        })\n    };\n\n    render() {\n        const {x_captcha_url, error, authenticated, displayName, hash} = this.state;\n\n        if (!displayName || !hash) {\n            return (\n                <>\n                <p><b>Кажется, вы перешли по неправильной ссылке, поэтому формы не будет.</b></p>\n                <p>Вернитесь в бота и попробуйте снова.</p>\n                </>\n                );\n        }\n\n        return authenticated ? (\n            <>\n                <a href={`tg://resolve?domain=nowplaybot`}>\n                    <Button variant=\"primary\" block>\n                        Перейти в бота\n                    </Button>\n                </a>\n                <small className=\"text-muted \">Если кнопка не работает -\n                    <a href={`${this.mirror}nowplaybot`}> перейдите по ссылке</a>\n                </small>\n            </>\n        ) : (\n            <Form>\n                <p><b>Внимание! Аккаунт будет подключен к пользователю {displayName}</b></p>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label column={false}>Введите логин, почту или телефон:</Form.Label>\n                    <Form.Control name=\"username\" onChange={this.handleChange}\n                                  type=\"email\" placeholder=\"Введите логин, почту или телефон\"/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label column={false}>Введите пароль</Form.Label>\n                    <Form.Control name=\"password\" onChange={this.handleChange}\n                                  type=\"password\" placeholder=\"Введите пароль\"/>\n                </Form.Group>\n\n                {x_captcha_url &&\n                <Form.Group controlId=\"formBasicCaptcha\">\n                    <Row className=\"mb-2\">\n                        <Col><Image fluid src={x_captcha_url}/></Col>\n                        <Col className=\"align-self-center\">\n                            <Button className=\"btn-block\" type=\"submit\" onClick={this.handleSubmit}>\n                                Обновить\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Control name=\"x_captcha_answer\" onChange={this.handleChange}\n                                          type=\"text\" placeholder=\"Введите код с картинки\"/>\n                        </Col>\n                    </Row>\n                </Form.Group>\n                }\n\n                <Button variant=\"primary\" type=\"submit\" block onClick={this.handleSubmit}>\n                    Войти\n                </Button>\n\n                {error &&\n                <p className=\"mt-1 text-danger\">{`${error}`}</p>\n                }\n            </Form>\n        );\n    }\n}\n\nexport default AuthForm;\n","import {Card} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nclass TrustCard extends React.Component {\n    render() {\n        return (\n            <Card className=\"mb-4\">\n                <Card.Header className=\"text-center\">\n                    <FontAwesomeIcon size={this.props.size} icon={this.props.icon} />\n                </Card.Header>\n\n                <Card.Body>\n                    <Card.Title>{this.props.title}</Card.Title>\n                    <Card.Text>{this.props.text}</Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nTrustCard.defaultProps = {\n    size: '7x'\n};\n\nexport default TrustCard;\n","import React, {Component} from 'react';\nimport {Badge, CardDeck, Col, Container, Row} from 'react-bootstrap'\nimport AuthForm from \"./AuthForm\";\nimport TrustCard from \"./TrustCard\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Container>\n                <Row className=\"mt-5\">\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                    <Col>\n                        <Row>\n                            <Container>\n                                <h4><a href=\"tg://resolve?domain=nowplaybot\">@nowplaybot</a> <Badge variant=\"primary\">Yandex.Music</Badge></h4>\n                            </Container>\n                        </Row>\n                        <Row>\n                            <Container>\n                                <p>Эта форма предназначена для соединения вашей Яндекс.Музыки и бота для отправки последних прослушанных треков в Телеграм.</p>\n                                <p>Смело вводите свои данные ниже. Если переживаете, покажите эту форму любому другу-программисту — он объяснит, что всё в порядке.</p>\n                            </Container>\n                        </Row>\n                    </Col>\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                </Row>\n                <Row>\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                    <Col>\n                        <AuthForm/>\n                    </Col>\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                </Row>\n                <Row className=\"mt-5\">\n                    <Container className=\"justify-content-center \">\n                        <h2 className=\"text-center mb-3\">Причины, по которым нам стоит доверять</h2>\n                        <Row>\n                            <CardDeck>\n                                <TrustCard icon={['fab', 'yandex']} title=\"Напрямую в Яндекс!\"\n                                           text=\"Ваш логин и пароль отправляется с Вашего компьютера сразу на сервера\n                                           Яндекса без каких-либо посредников.\"/>\n                                <TrustCard icon={['fab', 'expeditedssl']} title=\"Используем безопасное соединение!\"\n                                           text=\"Все ваши данные отправляются в зашифрованном виде через протокол HTTPS.\"/>\n                                <TrustCard icon=\"key\" title=\"Не храним ваши пароли!\"\n                                           text=\"На наших серверах хранится только Ваш уникальный токен,\n                                           полученный при авторизации.\"/>\n                            </CardDeck>\n                            <CardDeck>\n                                <TrustCard icon=\"code\" title=\"Открытый исходный код!\"\n                                           text=\"Весь исходный код опубликован в репозитории на GitHub и доступен для\n                                            просмотра.\"/>\n                                <TrustCard icon=\"shield-alt\" title=\"Только официальное приложение!\"\n                                           text=\"Авторизация происходит через OAuth приложение Яндекса используемое в их\n                                           клиентах.\"/>\n                                <TrustCard icon=\"spinner\" title=\"Выполнение в браузере!\"\n                                           text=\"Весь код выполняется в Вашем браузере без возможности вмешательства с\n                                           чьей-либо стороны.\"/>\n                            </CardDeck>\n                        </Row>\n                    </Container>\n                </Row>\n                <hr/>\n                <Row className=\"mb-3\">\n                    <Container>\n                        <Row className=\"d-flex justify-content-between\">\n                            <Col>\n                                <span>Исходный код: <a\n                                    href=\"https://github.com/aprosvetova/nowplaybot-yandex-auth\">nowplaybot-yandex-auth</a></span>\n                            </Col>\n                            <Col className=\"text-right\">\n                                <span> Автор <a href=\"https://github.com/MarshalX/yandex-music-token\">оригинальной странички</a>: <a href=\"tg://resolve?domain=MarshalX\">@MarshalX</a></span>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, far, fas);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}